<?php

/**
 * BaseKategorie
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property integer $kategorie_id
 * @property string $cs_title
 * @property string $cs_description
 * @property string $cs_keywords
 * @property string $en_title
 * @property string $en_description
 * @property string $en_keywords
 * @property Kategorie $Kategorie
 * @property Doctrine_Collection $Stranka
 * 
 * @method integer             getId()             Returns the current record's "id" value
 * @method string              getName()           Returns the current record's "name" value
 * @method integer             getKategorieId()    Returns the current record's "kategorie_id" value
 * @method string              getCsTitle()        Returns the current record's "cs_title" value
 * @method string              getCsDescription()  Returns the current record's "cs_description" value
 * @method string              getCsKeywords()     Returns the current record's "cs_keywords" value
 * @method string              getEnTitle()        Returns the current record's "en_title" value
 * @method string              getEnDescription()  Returns the current record's "en_description" value
 * @method string              getEnKeywords()     Returns the current record's "en_keywords" value
 * @method Kategorie           getKategorie()      Returns the current record's "Kategorie" value
 * @method Doctrine_Collection getStranka()        Returns the current record's "Stranka" collection
 * @method Kategorie           setId()             Sets the current record's "id" value
 * @method Kategorie           setName()           Sets the current record's "name" value
 * @method Kategorie           setKategorieId()    Sets the current record's "kategorie_id" value
 * @method Kategorie           setCsTitle()        Sets the current record's "cs_title" value
 * @method Kategorie           setCsDescription()  Sets the current record's "cs_description" value
 * @method Kategorie           setCsKeywords()     Sets the current record's "cs_keywords" value
 * @method Kategorie           setEnTitle()        Sets the current record's "en_title" value
 * @method Kategorie           setEnDescription()  Sets the current record's "en_description" value
 * @method Kategorie           setEnKeywords()     Sets the current record's "en_keywords" value
 * @method Kategorie           setKategorie()      Sets the current record's "Kategorie" value
 * @method Kategorie           setStranka()        Sets the current record's "Stranka" collection
 * 
 * @package    eracleamare
 * @subpackage model
 * @author     Jan Damek
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseKategorie extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('kategorie');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('name', 'string', 50, array(
             'type' => 'string',
             'unique' => true,
             'length' => 50,
             ));
        $this->hasColumn('kategorie_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('cs_title', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('cs_description', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('cs_keywords', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('en_title', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('en_description', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('en_keywords', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Kategorie', array(
             'local' => 'kategorie_id',
             'foreign' => 'id'));

        $this->hasMany('Stranka', array(
             'local' => 'id',
             'foreign' => 'kategorie_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'unique' => true,
             'fields' => 
             array(
              0 => 'name',
             ),
             'canUpdate' => true,
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}